package ${rootPackageName}.${modulePackageName}.${servicePackageName}.${serviceImplPackageName};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import ${rootPackageName}.${modulePackageName}.${dtoPackageName}.${requestPackageName}.Add${entityClassName}${requestSuffix};
import ${rootPackageName}.${modulePackageName}.${dtoPackageName}.${requestPackageName}.Page${entityClassName}${requestSuffix};
import ${rootPackageName}.${modulePackageName}.${dtoPackageName}.${requestPackageName}.Update${entityClassName}${requestSuffix};
import ${rootPackageName}.${modulePackageName}.${dtoPackageName}.${responsePackageName}.${entityClassName}${responseSuffix};
import ${rootPackageName}.${modulePackageName}.${dtoPackageName}.${responsePackageName}.${entityClassName};
import ${rootPackageName}.${modulePackageName}.${mapperPackageName}.${entityClassName}Mapper;
import ${rootPackageName}.${modulePackageName}.${servicePackageName}.${entityClassName}Service;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import java.util.List;

/**
* @author : ${author}
#if(${enableEmail})
* @email : ${email}
#end
* @datetime : ${datetime}
* @description : ${tableComment}业务层实现
*/
@Service
public class ${entityClassName}ServiceImpl extends ServiceImpl<${entityClassName}Mapper, ${entityClassName}> implements ${entityClassName}Service {

    @Override
    public IPage<${entityClassName}> page(Page${entityClassName}${requestSuffix} request) {
        IPage<${entityClassName}> page = new Page<>(request.getCurrent(), request.getSize());
        ${entityClassName} entity = new ${entityClassName}();
        BeanUtils.copyProperties(request, entity);
        return super.page(page, new QueryWrapper<>(entity));
    }

    @Override
    public ${entityClassName}${responseSuffix} detail(${idDataType} id) {
        Demo entity = super.getById(id);
        ${entityClassName}${responseSuffix} response = new ${entityClassName}${responseSuffix}();
        BeanUtils.copyProperties(response, entity);
        return response;
    }

    @Override
    public boolean save(Add${entityClassName}${requestSuffix} request) {
        ${entityClassName} entity = new ${entityClassName}();
        BeanUtils.copyProperties(request, entity);
        return super.save(entity);
    }

    @Override
    public boolean update(Update${entityClassName}${requestSuffix} request) {
        ${entityClassName} entity = new ${entityClassName}();
        BeanUtils.copyProperties(request, entity);
        return super.updateById(entity);
    }

    @Override
    public boolean delete(${idDataType} id) {
        return super.removeById(id);
    }

    @Override
    public boolean deleteBatch(List<${idDataType}> ids) {
        return super.removeByIds(ids);
    }
}
