package ${packageName}.${moduleName}.${controllerPackageName}.controller;

import com.baomidou.mybatisplus.core.metadata.IPage;
import ${packageName}.${moduleName}.${dtoPackageName}.${requestPackageName}.Add${entityClassName}${requestSuffix};
import ${packageName}.${moduleName}.${dtoPackageName}.${requestPackageName}.Page${entityClassName}${requestSuffix};
import ${packageName}.${moduleName}.${dtoPackageName}.${requestPackageName}.Update${entityClassName}${requestSuffix};
import com.github.cloud.dto.response.ApiResponse;
import ${packageName}.${moduleName}.${dtoPackageName}.${responsePackageName}.${entityClassName}${responseSuffix};
import ${packageName}.${moduleName}.${entityPackageName}.${entityClassName};
import ${packageName}.${moduleName}.${servicePackageName}.${entityClassName}Service;
#if($enableSwagger)
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end#if($enableShiro)
import org.apache.shiro.authz.annotations.RequirePermission;
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
* @author : ${author}
* @date : ${date}
* @time : ${time}
* @Description : ${comment}业务层实现
*/
#if($enableSwagger)
@Api(value = "${comment}" , tags = {"${comment}"})
#end
@RestController
@RequestMapping("/${entityLowerName}")
public class ${entityClassName}Contoller {

    @Autowired
    private ${entityClassName}Service ${entityLowerName}Service;

#if($enableSwagger)
    @ApiOperation(value = "分页查询${comment}" , tags = "分页查询")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:page")
#end
    @GetMapping("/page")
    public ApiResponse<IPage<${entityClassName}>> page(Page${entityClassName} request) {
    IPage<Demo> response = ${entityLowerName}Service.page(request);
        return ApiResponse.success(response);
    }


#if($enableSwagger)
    @ApiOperation(value = "查询${comment}详情" , tags = "查询详情")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:detail")
#end
    @GetMapping("/detail/{id}")
    public ApiResponse<${entityClassName}Response> detail(@PathVariable("id") ${column.javaType} id) {
        ${entityClassName}Response response = ${entityLowerName}Service.detail(id);
        return ApiResponse.success(response);
    }


#if($enableSwagger)
    @ApiOperation(value = "新增${comment}" , tags = "新增")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:save")
#end
    @PostMapping("/save")
    public ApiResponse<Boolean> save(@RequestBody @Valid Add${entityClassName} request) {
        boolean save = ${entityLowerName}Service.save(request);
        return ApiResponse.success(save);
    }


#if($enableSwagger)
    @ApiOperation(value = "更新${comment}" , tags = "更新")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:update")
#end
    @PutMapping("/update")
    public ApiResponse<Boolean> update(@RequestBody @Valid Update${entityClassName} request) {
        boolean update = ${entityLowerName}Service.update(request);
        return ApiResponse.success(update);
    }


#if($enableSwagger)
    @ApiOperation(value = "删除${comment}" , tags = "删除")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:delete")
#end
    @DeleteMapping("/delete/{id}")
    public ApiResponse<Boolean> delete(@PathVariable("id") ${column.javaType} id) {
        boolean delete = ${entityLowerName}Service.delete(id);
        return ApiResponse.success(delete);
    }


#if($enableSwagger)
    @ApiOperation(value = "批量删除${comment}" , tags = "批量删除")
#end
#if($enableShiro)
    @RequirePermission(value = "${moduleName}:${entityLowerName}:delete")
#end
    @DeleteMapping("/delete/batch/{ids}")
    public ApiResponse<Boolean> deleteBatch(@PathVariable("ids") List<${column.javaType}> ids) {
        boolean delete = ${entityLowerName}Service.deleteBatch(ids);
        return ApiResponse.success(delete);
    }
}